{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Dhruv Gupta\\\\Documents\\\\Job\\\\raptor-maps-test-repo\\\\raptormaps-react\\\\raptormaps-client\\\\src\\\\map\\\\settings.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, IconButton, TextField, Typography } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport AddIcon from '@material-ui/icons/Add';\nimport { useState } from 'react';\nimport API from '../api';\nexport function Settings({\n  isOpen,\n  currentTechnicians,\n  solarFarmId,\n  onSettingsChanged\n}) {\n  _s();\n\n  const [technicians, setTechnicians] = useState(currentTechnicians);\n\n  const handleChangedTechnician = event => {\n    const id = event.target.id.split('-');\n    const val = event.target.value;\n    const ind = parseInt(id[1]);\n    const prop = id[2];\n    let newArray = [...technicians];\n    let tech = newArray[ind];\n\n    if (prop == \"name\") {\n      tech[prop] = val;\n    } else if (prop == \"bearing\") {\n      tech[prop] = parseInt(val);\n    } else if (prop == \"long\") {\n      tech.coordinates[0] = parseFloat(val);\n    } else {\n      tech.coordinates[1] = parseFloat(val);\n    }\n\n    setTechnicians(newArray);\n  };\n\n  async function handleSettingsChanged(event) {\n    event.preventDefault();\n    await API.getInstance().updateTechnicians(solarFarmId, technicians);\n    onSettingsChanged({\n      changed: true,\n      solarFarmId: solarFarmId,\n      technicians: technicians\n    });\n  }\n\n  const handleSettingsModalClose = () => {\n    setTechnicians(currentTechnicians);\n    onSettingsChanged({\n      changed: false\n    });\n  };\n\n  const handleDeleteTechnician = event => {\n    document.querySelectorAll(\"input\").forEach(input => input.value = \"\");\n    let ind = parseInt(event.currentTarget.id.split('-')[1]);\n    let newArray = [...technicians];\n    newArray.splice(ind, 1);\n    setTechnicians(newArray);\n  };\n\n  const renderTechnicians = () => {\n    if (technicians.length == 0) return /*#__PURE__*/_jsxDEV(Typography, {\n      gutterBottom: true,\n      children: \" No Technicians \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 20\n    }, this);\n    return technicians.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: `item-${index}-name`,\n              label: \"Technician \" + (index + 1),\n              value: item.name,\n              onChange: handleChangedTechnician,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: `item-${index}-bearing`,\n              style: {\n                width: 100\n              },\n              label: \"Bearing\",\n              type: \"number\",\n              inputProps: {\n                step: 1,\n                min: 0,\n                max: 360\n              },\n              value: item.bearing,\n              onChange: handleChangedTechnician,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: `item-${index}-long`,\n              label: \"Longitude\",\n              type: \"number\",\n              inputProps: {\n                step: \"any\",\n                min: -180,\n                max: 180\n              },\n              value: item.coordinates[0],\n              onChange: handleChangedTechnician,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: `item-${index}-lat`,\n              label: \"Latitude\",\n              type: \"number\",\n              inputProps: {\n                step: \"any\",\n                min: -90,\n                max: 90\n              },\n              value: item.coordinates[1],\n              onChange: handleChangedTechnician,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              id: `item-${index}-delete`,\n              onClick: handleDeleteTechnician,\n              children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      fullWidth: true,\n      maxWidth: \"md\",\n      onClose: handleSettingsModalClose,\n      \"aria-labelledby\": \"customized-dialog-title\",\n      open: isOpen,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"customized-dialog-title\",\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSettingsChanged,\n        children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n          dividers: true,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            style: {\n              marginBottom: \"20px\"\n            },\n            required: true,\n            inputProps: {\n              step: 1\n            },\n            type: \"number\",\n            label: \"Solar Farm Id\",\n            value: solarFarmId + \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this), renderTechnicians(), /*#__PURE__*/_jsxDEV(Button, {\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 40\n            }, this),\n            onClick: () => {\n              setTechnicians([...technicians, {\n                name: \"\",\n                bearing: 0,\n                coordinates: [0, 0]\n              }]);\n            },\n            children: \" Add Tech \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            autoFocus: true,\n            onClick: handleSettingsModalClose,\n            color: \"secondary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            autoFocus: true,\n            type: \"submit\",\n            color: \"primary\",\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Settings, \"BBX7cyZbWxpYKXWP1exT2EJZyD4=\");\n\n_c = Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["C:/Users/Dhruv Gupta/Documents/Job/raptor-maps-test-repo/raptormaps-react/raptormaps-client/src/map/settings.tsx"],"names":["Button","Dialog","DialogActions","DialogContent","DialogTitle","Grid","IconButton","TextField","Typography","CloseIcon","AddIcon","useState","API","Settings","isOpen","currentTechnicians","solarFarmId","onSettingsChanged","technicians","setTechnicians","handleChangedTechnician","event","id","target","split","val","value","ind","parseInt","prop","newArray","tech","coordinates","parseFloat","handleSettingsChanged","preventDefault","getInstance","updateTechnicians","changed","handleSettingsModalClose","handleDeleteTechnician","document","querySelectorAll","forEach","input","currentTarget","splice","renderTechnicians","length","map","item","index","marginBottom","name","width","step","min","max","bearing"],"mappings":";;;;;;AAAA,SAASA,MAAT,EAAiBC,MAAjB,EAAyBC,aAAzB,EAAwCC,aAAxC,EAAuDC,WAAvD,EAAoEC,IAApE,EAA0EC,UAA1E,EAA8FC,SAA9F,EAAyGC,UAAzG,QAA2H,mBAA3H;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AAEA,SAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,GAAP,MAAgB,QAAhB;AAGA,OAAO,SAASC,QAAT,CAAkB;AAACC,EAAAA,MAAD;AAASC,EAAAA,kBAAT;AAA6BC,EAAAA,WAA7B;AAA0CC,EAAAA;AAA1C,CAAlB,EAAgF;AAAA;;AAEnF,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAeI,kBAAf,CAA9C;;AAEA,QAAMK,uBAAuB,GAAIC,KAAD,IAAW;AACvC,UAAMC,EAAE,GAAGD,KAAK,CAACE,MAAN,CAAaD,EAAb,CAAgBE,KAAhB,CAAsB,GAAtB,CAAX;AACA,UAAMC,GAAG,GAAGJ,KAAK,CAACE,MAAN,CAAaG,KAAzB;AACA,UAAMC,GAAY,GAAGC,QAAQ,CAACN,EAAE,CAAC,CAAD,CAAH,CAA7B;AACA,UAAMO,IAAa,GAAGP,EAAE,CAAC,CAAD,CAAxB;AAEA,QAAIQ,QAAQ,GAAG,CAAC,GAAGZ,WAAJ,CAAf;AACA,QAAIa,IAAiB,GAAGD,QAAQ,CAACH,GAAD,CAAhC;;AACA,QAAGE,IAAI,IAAI,MAAX,EAAmB;AACfE,MAAAA,IAAI,CAACF,IAAD,CAAJ,GAAaJ,GAAb;AACH,KAFD,MAGK,IAAGI,IAAI,IAAI,SAAX,EAAsB;AACvBE,MAAAA,IAAI,CAACF,IAAD,CAAJ,GAAaD,QAAQ,CAACH,GAAD,CAArB;AACH,KAFI,MAGA,IAAGI,IAAI,IAAI,MAAX,EAAmB;AACpBE,MAAAA,IAAI,CAACC,WAAL,CAAiB,CAAjB,IAAsBC,UAAU,CAACR,GAAD,CAAhC;AACH,KAFI,MAGA;AACDM,MAAAA,IAAI,CAACC,WAAL,CAAiB,CAAjB,IAAsBC,UAAU,CAACR,GAAD,CAAhC;AACH;;AAEDN,IAAAA,cAAc,CAACW,QAAD,CAAd;AACH,GAtBD;;AAwBA,iBAAeI,qBAAf,CAAsCb,KAAtC,EAA+D;AAC3DA,IAAAA,KAAK,CAACc,cAAN;AACA,UAAMvB,GAAG,CAACwB,WAAJ,GAAkBC,iBAAlB,CAAoCrB,WAApC,EAAiDE,WAAjD,CAAN;AACAD,IAAAA,iBAAiB,CAAC;AACdqB,MAAAA,OAAO,EAAE,IADK;AAEdtB,MAAAA,WAAW,EAAEA,WAFC;AAGdE,MAAAA,WAAW,EAAEA;AAHC,KAAD,CAAjB;AAKH;;AAED,QAAMqB,wBAAwB,GAAG,MAAM;AACnCpB,IAAAA,cAAc,CAACJ,kBAAD,CAAd;AACAE,IAAAA,iBAAiB,CAAC;AACdqB,MAAAA,OAAO,EAAE;AADK,KAAD,CAAjB;AAGH,GALD;;AAOA,QAAME,sBAAsB,GAAInB,KAAD,IAAW;AACtCoB,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCC,OAAnC,CACIC,KAAK,IAAKA,KAAK,CAAClB,KAAN,GAAc,EAD5B;AAGA,QAAIC,GAAG,GAAGC,QAAQ,CAACP,KAAK,CAACwB,aAAN,CAAoBvB,EAApB,CAAuBE,KAAvB,CAA6B,GAA7B,EAAkC,CAAlC,CAAD,CAAlB;AACA,QAAIM,QAAQ,GAAG,CAAC,GAAGZ,WAAJ,CAAf;AACAY,IAAAA,QAAQ,CAACgB,MAAT,CAAgBnB,GAAhB,EAAqB,CAArB;AACAR,IAAAA,cAAc,CAACW,QAAD,CAAd;AACH,GARD;;AAUA,QAAMiB,iBAAiB,GAAG,MAAM;AAC5B,QAAG7B,WAAW,CAAC8B,MAAZ,IAAsB,CAAzB,EACI,oBAAO,QAAC,UAAD;AAAY,MAAA,YAAY,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACJ,WAAO9B,WAAW,CAAC+B,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACpC,0BACI;AAAiB,QAAA,KAAK,EAAE;AAACC,UAAAA,YAAY,EAAE;AAAf,SAAxB;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,OAAO,EAAE,CAAzB;AAAA,kCACI,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACI,QAAC,SAAD;AAAW,cAAA,EAAE,EAAG,QAAOD,KAAM,OAA7B;AAAqC,cAAA,KAAK,EAAE,iBAAiBA,KAAK,GAAG,CAAzB,CAA5C;AAAyE,cAAA,KAAK,EAAED,IAAI,CAACG,IAArF;AAA2F,cAAA,QAAQ,EAAEjC,uBAArG;AAA8H,cAAA,QAAQ;AAAtI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACI,QAAC,SAAD;AAAW,cAAA,EAAE,EAAG,QAAO+B,KAAM,UAA7B;AAAwC,cAAA,KAAK,EAAE;AAACG,gBAAAA,KAAK,EAAE;AAAR,eAA/C;AAA6D,cAAA,KAAK,EAAC,SAAnE;AAA6E,cAAA,IAAI,EAAC,QAAlF;AAA2F,cAAA,UAAU,EAAE;AAACC,gBAAAA,IAAI,EAAE,CAAP;AAAUC,gBAAAA,GAAG,EAAE,CAAf;AAAkBC,gBAAAA,GAAG,EAAE;AAAvB,eAAvG;AAAoI,cAAA,KAAK,EAAEP,IAAI,CAACQ,OAAhJ;AAAyJ,cAAA,QAAQ,EAAEtC,uBAAnK;AAA4L,cAAA,QAAQ;AAApM;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAOI,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACI,QAAC,SAAD;AAAW,cAAA,EAAE,EAAG,QAAO+B,KAAM,OAA7B;AAAqC,cAAA,KAAK,EAAC,WAA3C;AAAuD,cAAA,IAAI,EAAC,QAA5D;AAAqE,cAAA,UAAU,EAAE;AAACI,gBAAAA,IAAI,EAAE,KAAP;AAAcC,gBAAAA,GAAG,EAAE,CAAC,GAApB;AAAyBC,gBAAAA,GAAG,EAAE;AAA9B,eAAjF;AAAqH,cAAA,KAAK,EAAEP,IAAI,CAAClB,WAAL,CAAiB,CAAjB,CAA5H;AAAiJ,cAAA,QAAQ,EAAEZ,uBAA3J;AAAoL,cAAA,QAAQ;AAA5L;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAUI,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACI,QAAC,SAAD;AAAW,cAAA,EAAE,EAAG,QAAO+B,KAAM,MAA7B;AAAoC,cAAA,KAAK,EAAC,UAA1C;AAAqD,cAAA,IAAI,EAAC,QAA1D;AAAmE,cAAA,UAAU,EAAE;AAACI,gBAAAA,IAAI,EAAE,KAAP;AAAcC,gBAAAA,GAAG,EAAE,CAAC,EAApB;AAAwBC,gBAAAA,GAAG,EAAE;AAA7B,eAA/E;AAAiH,cAAA,KAAK,EAAEP,IAAI,CAAClB,WAAL,CAAiB,CAAjB,CAAxH;AAA6I,cAAA,QAAQ,EAAEZ,uBAAvJ;AAAgL,cAAA,QAAQ;AAAxL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAVJ,eAcI,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACI,QAAC,UAAD;AAAY,cAAA,EAAE,EAAG,QAAO+B,KAAM,SAA9B;AAAwC,cAAA,OAAO,EAAEX,sBAAjD;AAAA,qCACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,SAAUW,KAAV;AAAA;AAAA;AAAA;AAAA,cADJ;AAyBH,KA1BM,CAAP;AA2BH,GA9BD;;AAgCA,sBACI;AAAA,2BACI,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAE,IAAnB;AAAyB,MAAA,QAAQ,EAAC,IAAlC;AAAuC,MAAA,OAAO,EAAEZ,wBAAhD;AAA0E,yBAAgB,yBAA1F;AAAoH,MAAA,IAAI,EAAEzB,MAA1H;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,EAAE,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAM,QAAA,QAAQ,EAAEoB,qBAAhB;AAAA,gCACI,QAAC,aAAD;AAAe,UAAA,QAAQ,MAAvB;AAAA,kCACA,QAAC,SAAD;AAAW,YAAA,KAAK,EAAE;AAACkB,cAAAA,YAAY,EAAE;AAAf,aAAlB;AAA0C,YAAA,QAAQ,MAAlD;AAAmD,YAAA,UAAU,EAAE;AAACG,cAAAA,IAAI,EAAE;AAAP,aAA/D;AAA0E,YAAA,IAAI,EAAC,QAA/E;AAAwF,YAAA,KAAK,EAAC,eAA9F;AAA8G,YAAA,KAAK,EAAEvC,WAAW,GAAG;AAAnI;AAAA;AAAA;AAAA;AAAA,kBADA,EAGI+B,iBAAiB,EAHrB,eAKA,QAAC,MAAD;AAAQ,YAAA,SAAS,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,oBAAnB;AAAgC,YAAA,OAAO,EAAE,MAAM;AAC3C5B,cAAAA,cAAc,CAAC,CAAC,GAAGD,WAAJ,EAAiB;AAACmC,gBAAAA,IAAI,EAAE,EAAP;AAAWK,gBAAAA,OAAO,EAAE,CAApB;AAAuB1B,gBAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ;AAApC,eAAjB,CAAD,CAAd;AACH,aAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUI,QAAC,aAAD;AAAA,kCACA,QAAC,MAAD;AAAQ,YAAA,SAAS,MAAjB;AAAkB,YAAA,OAAO,EAAEO,wBAA3B;AAAqD,YAAA,KAAK,EAAC,WAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAIA,QAAC,MAAD;AAAQ,YAAA,SAAS,MAAjB;AAAkB,YAAA,IAAI,EAAC,QAAvB;AAAgC,YAAA,KAAK,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AA6BH;;GApHe1B,Q;;KAAAA,Q","sourcesContent":["import { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, IconButton, Switch, TextField, Typography } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Technician } from './maprender';\r\nimport { ButtonHTMLAttributes, useState } from 'react';\r\nimport API from '../api';\r\n\r\n\r\nexport function Settings({isOpen, currentTechnicians, solarFarmId, onSettingsChanged}) {\r\n\r\n    const [technicians, setTechnicians] = useState<Technician[]>(currentTechnicians); \r\n\r\n    const handleChangedTechnician = (event) => {\r\n        const id = event.target.id.split('-');\r\n        const val = event.target.value;\r\n        const ind : number = parseInt(id[1]);\r\n        const prop : string = id[2];\r\n\r\n        let newArray = [...technicians];\r\n        let tech : Technician = newArray[ind];\r\n        if(prop == \"name\") {\r\n            tech[prop] = val;\r\n        }\r\n        else if(prop == \"bearing\") {\r\n            tech[prop] = parseInt(val);\r\n        }\r\n        else if(prop == \"long\") {\r\n            tech.coordinates[0] = parseFloat(val);\r\n        }\r\n        else {\r\n            tech.coordinates[1] = parseFloat(val);\r\n        }\r\n\r\n        setTechnicians(newArray);\r\n    }\r\n\r\n    async function handleSettingsChanged (event : React.FormEvent) {\r\n        event.preventDefault();\r\n        await API.getInstance().updateTechnicians(solarFarmId, technicians);\r\n        onSettingsChanged({\r\n            changed: true,\r\n            solarFarmId: solarFarmId,\r\n            technicians: technicians\r\n        });\r\n    }\r\n\r\n    const handleSettingsModalClose = () => {\r\n        setTechnicians(currentTechnicians);\r\n        onSettingsChanged({\r\n            changed: false\r\n        });\r\n    }\r\n\r\n    const handleDeleteTechnician = (event) => {\r\n        document.querySelectorAll(\"input\").forEach(\r\n            input => (input.value = \"\")\r\n          );\r\n        let ind = parseInt(event.currentTarget.id.split('-')[1]);\r\n        let newArray = [...technicians];\r\n        newArray.splice(ind, 1);\r\n        setTechnicians(newArray);\r\n    }\r\n\r\n    const renderTechnicians = () => {\r\n        if(technicians.length == 0)\r\n            return <Typography gutterBottom> No Technicians </Typography>;\r\n        return technicians.map((item, index) => {\r\n            return (\r\n                <div key={index} style={{marginBottom: '20px'}}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item>\r\n                            <TextField id={`item-${index}-name`} label={\"Technician \" + (index + 1)} value={item.name} onChange={handleChangedTechnician} required></TextField>\r\n                        </Grid>\r\n                        <Grid item >\r\n                            <TextField id={`item-${index}-bearing`} style={{width: 100}} label=\"Bearing\" type=\"number\" inputProps={{step: 1, min: 0, max: 360}} value={item.bearing} onChange={handleChangedTechnician} required></TextField>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <TextField id={`item-${index}-long`} label=\"Longitude\" type=\"number\" inputProps={{step: \"any\", min: -180, max: 180}} value={item.coordinates[0]} onChange={handleChangedTechnician} required></TextField>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <TextField id={`item-${index}-lat`} label=\"Latitude\" type=\"number\" inputProps={{step: \"any\", min: -90, max: 90}} value={item.coordinates[1]} onChange={handleChangedTechnician} required></TextField>\r\n                        </Grid>\r\n\r\n                        <Grid item>\r\n                            <IconButton id={`item-${index}-delete`} onClick={handleDeleteTechnician}>\r\n                                <CloseIcon />\r\n                            </IconButton>\r\n                        </Grid>\r\n                        </Grid>\r\n                      \r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth=\"md\" onClose={handleSettingsModalClose} aria-labelledby=\"customized-dialog-title\" open={isOpen}>\r\n                <DialogTitle id=\"customized-dialog-title\">\r\n                    Settings\r\n                </DialogTitle>\r\n    \r\n                <form onSubmit={handleSettingsChanged}>\r\n                    <DialogContent dividers>\r\n                    <TextField style={{marginBottom: \"20px\"}} required inputProps={{step: 1}} type=\"number\" label=\"Solar Farm Id\" value={solarFarmId + \"\"} />\r\n                    {\r\n                        renderTechnicians()\r\n                    }\r\n                    <Button startIcon={<AddIcon />} onClick={() => {\r\n                        setTechnicians([...technicians, {name: \"\", bearing: 0, coordinates: [0, 0]}]);\r\n                    }}> Add Tech </Button>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                    <Button autoFocus onClick={handleSettingsModalClose} color=\"secondary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button autoFocus type=\"submit\" color=\"primary\">\r\n                        Save Changes\r\n                    </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>        \r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}